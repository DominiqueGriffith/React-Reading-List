{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\domin\\\\Desktop\\\\GitHub\\\\Bootcamp\\\\20-react\\\\01-Activities\\\\09-Stu_AJAXBooks\\\\Unsolved\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\domin\\\\Desktop\\\\GitHub\\\\Bootcamp\\\\20-react\\\\01-Activities\\\\09-Stu_AJAXBooks\\\\Unsolved\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\domin\\\\Desktop\\\\GitHub\\\\Bootcamp\\\\20-react\\\\01-Activities\\\\09-Stu_AJAXBooks\\\\Unsolved\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\domin\\\\Desktop\\\\GitHub\\\\Bootcamp\\\\20-react\\\\01-Activities\\\\09-Stu_AJAXBooks\\\\Unsolved\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\domin\\\\Desktop\\\\GitHub\\\\Bootcamp\\\\20-react\\\\01-Activities\\\\09-Stu_AJAXBooks\\\\Unsolved\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\domin\\\\Desktop\\\\GitHub\\\\Bootcamp\\\\20-react\\\\01-Activities\\\\09-Stu_AJAXBooks\\\\Unsolved\\\\client\\\\src\\\\pages\\\\Books.js\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nvar Books = /*#__PURE__*/function (_Component) {\n  _inherits(Books, _Component);\n\n  function Books() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Books);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Books)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: []\n    };\n    return _this;\n  }\n\n  _createClass(Books, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.searchMovies(\"The Matrix\");\n    } // Add code here to get all books from the database and save them to this.state.books\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        size: \"md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Jumbotron, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }\n      }, \"What Books Should I Read?\")), /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        name: \"title\",\n        placeholder: \"Title (required)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Input, {\n        name: \"author\",\n        placeholder: \"Author (required)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(TextArea, {\n        name: \"synopsis\",\n        placeholder: \"Synopsis (Optional)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(FormBtn, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }\n      }, \"Submit Book\"))), /*#__PURE__*/React.createElement(Col, {\n        size: \"md-6 sm-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Jumbotron, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }\n      }, \"Books On My List\")), this.state.books.length ? /*#__PURE__*/React.createElement(List, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }\n      }, this.state.books.map(function (book) {\n        return /*#__PURE__*/React.createElement(ListItem, {\n          key: book._id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: \"/books/\" + book._id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 23\n          }\n        }, book.title, \" by \", book.author)), /*#__PURE__*/React.createElement(DeleteBtn, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }\n        }));\n      })) : /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }\n      }, \"No Results to Display\"))));\n    }\n  }]);\n\n  return Books;\n}(Component);\n\nexport default Books;","map":{"version":3,"sources":["C:/Users/domin/Desktop/GitHub/Bootcamp/20-react/01-Activities/09-Stu_AJAXBooks/Unsolved/client/src/pages/Books.js"],"names":["React","Component","Jumbotron","DeleteBtn","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","Books","state","books","searchMovies","length","map","book","_id","title","author"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,oBAA/B;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,oBAAzC;;IAEMC,K;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE;AADD,K;;;;;;wCAGY;AAClB,WAAKC,YAAL,CAAkB,YAAlB;AACD,K,CAED;;;;6BAES;AAAA;;AACP,0BACE,oBAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,WAAW,EAAC,kBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,WAAW,EAAC,mBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eAGE,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAC,UAAf;AAA0B,QAAA,WAAW,EAAC,qBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,eAIE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJF,CAJF,CADF,eAYE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CADF,EAIG,KAAKF,KAAL,CAAWC,KAAX,CAAiBE,MAAjB,gBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKH,KAAL,CAAWC,KAAX,CAAiBG,GAAjB,CAAqB,UAAAC,IAAI;AAAA,4BACxB,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,IAAI,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAG,UAAA,IAAI,EAAE,YAAYD,IAAI,CAACC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,IAAI,CAACE,KADR,UACmBF,IAAI,CAACG,MADxB,CADF,CADF,eAME,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,CADwB;AAAA,OAAzB,CADH,CADD,gBAcC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAlBJ,CAZF,CADF,CADF;AAsCD;;;;EAlDiBpB,S;;AAqDpB,eAAeW,KAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport DeleteBtn from \"../components/DeleteBtn\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/List\";\r\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\r\n\r\nclass Books extends Component {\r\n  // Initialize this.state.books as an empty array\r\n  state = {\r\n    books: []\r\n  };\r\n  componentDidMount() {\r\n    this.searchMovies(\"The Matrix\");\r\n  }\r\n\r\n  // Add code here to get all books from the database and save them to this.state.books\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col size=\"md-6\">\r\n            <Jumbotron>\r\n              <h1>What Books Should I Read?</h1>\r\n            </Jumbotron>\r\n            <form>\r\n              <Input name=\"title\" placeholder=\"Title (required)\" />\r\n              <Input name=\"author\" placeholder=\"Author (required)\" />\r\n              <TextArea name=\"synopsis\" placeholder=\"Synopsis (Optional)\" />\r\n              <FormBtn>Submit Book</FormBtn>\r\n            </form>\r\n          </Col>\r\n          <Col size=\"md-6 sm-12\">\r\n            <Jumbotron>\r\n              <h1>Books On My List</h1>\r\n            </Jumbotron>\r\n            {this.state.books.length ? (\r\n              <List>\r\n                {this.state.books.map(book => (\r\n                  <ListItem key={book._id}>\r\n                    <a href={\"/books/\" + book._id}>\r\n                      <strong>\r\n                        {book.title} by {book.author}\r\n                      </strong>\r\n                    </a>\r\n                    <DeleteBtn />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            ) : (\r\n              <h3>No Results to Display</h3>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Books;\r\n"]},"metadata":{},"sourceType":"module"}